{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"0NAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cAAe,gF,OCoBJC,E,4MAtBbC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAAAC,GACbA,EAAMC,iBAEN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,4CAGjC,WAAU,IAAD,OACP,OACE,qBAAKM,UAAU,aAAf,SACE,sBAAMD,SAAUE,KAAKN,aAAcK,UAAU,UAA7C,SACE,sBAAKA,UAAU,QAAf,UACE,mFACA,uBAAOE,KAAK,OAAOC,MAAOF,KAAKR,MAAMC,KAAMU,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEZ,KAAMW,EAAEE,OAAOJ,sB,GAf/EK,IAAMC,WCgCfC,G,wDA/Bb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAWRa,SAAW,WACT,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAKN,EAAS,IAEjC,EAAKN,SAAS,CAAEU,WAdhB,EAAKvB,MAAQ,CAAEuB,MAAO,GAEtB,EAAKH,SAAWL,IAAMW,YALL,E,qDAQnB,WACElB,KAAKY,SAASC,QAAQM,iBAAiB,OAAQnB,KAAKU,Y,oBAWtD,WAAU,IAAD,EACuBV,KAAKH,MAAMuB,MAAjCC,EADD,EACCA,YAAaC,EADd,EACcA,KAErB,OACE,qBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUxB,KAAKR,MAAMuB,QAA7C,SACE,qBAAKU,IAAKzB,KAAKY,SAAUc,IAAKL,EAAaM,IAAKL,EAAKM,gB,GA1BrCrB,IAAMC,YCUfqB,EARG,SAAChC,GACjB,IAAMiC,EAASjC,EAAMiC,OAAOC,KAAI,SAACX,GAC/B,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMY,OAG/B,OAAO,qBAAKjC,UAAU,aAAf,SAA6B+B,KCiBvBG,E,4MApBbzC,MAAQ,CAAEsC,OAAQ,I,EAElBI,e,uCAAiB,WAAOzC,GAAP,eAAA0C,EAAA,sEACQC,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CAAEC,MAAO9C,KAFJ,OACT+C,EADS,OAKf,EAAKnC,SAAS,CAAEyB,OAAQU,EAASC,KAAKC,UALvB,2C,kGAQjB,WACE,OACE,sBAAK3C,UAAU,eAAewB,MAAO,CAAEoB,UAAW,QAAlD,UACE,cAAC,EAAD,CAAW7C,SAAUE,KAAKkC,iBAC1B,cAAC,EAAD,CAAWJ,OAAQ9B,KAAKR,MAAMsC,gB,GAfpBvB,IAAMC,WCDxBoC,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,cAAc,Y","file":"static/js/main.ff6ce2a6.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.unsplash.com',\r\n  headers: {\r\n    Authorization: 'Client-ID 18812fa7b070745656e03a3c5cd1db5f0937b92bf36362ef1dbb81f58b27f39c'\r\n  }\r\n})\r\n","import React from 'react'\r\n\r\nclass SearchBar extends React.Component {\r\n  state = { term: '' }\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    this.props.onSubmit(this.state.term)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\">\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label>Enter the name of the image you want to search</label>\r\n            <input type=\"text\" value={this.state.term} onChange={(e) => this.setState({ term: e.target.value })} />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react'\r\n\r\nclass ImageCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = { spans: 0 }\r\n\r\n    this.imageRef = React.createRef()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener('load', this.setSpans)\r\n  }\r\n\r\n  setSpans = () => {\r\n    const height = this.imageRef.current.clientHeight\r\n\r\n    const spans = Math.ceil(height / 10)\r\n\r\n    this.setState({ spans })\r\n  }\r\n\r\n  render() {\r\n    const { description, urls } = this.props.image\r\n\r\n    return (\r\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n        <img ref={this.imageRef} alt={description} src={urls.regular} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ImageCard\r\n","import './ImageList.css'\r\nimport React from 'react'\r\nimport ImageCard from './ImageCard'\r\n\r\nconst ImageList = (props) => {\r\n  const images = props.images.map((image) => {\r\n    return <ImageCard key={image.id} image={image} />\r\n  })\r\n\r\n  return <div className=\"image-list\">{images}</div>\r\n}\r\n\r\nexport default ImageList\r\n","import React from 'react'\r\nimport unsplash from '../api/unsplash'\r\nimport SearchBar from './SearchBar'\r\nimport ImageList from './ImageList'\r\n\r\nclass App extends React.Component {\r\n  state = { images: [] }\r\n\r\n  onSearchSubmit = async (term) => {\r\n    const response = await unsplash.get('/search/photos', {\r\n      params: { query: term }\r\n    })\r\n\r\n    this.setState({ images: response.data.results })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\" style={{ marginTop: '10px' }}>\r\n        <SearchBar onSubmit={this.onSearchSubmit} />\r\n        <ImageList images={this.state.images} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />,\r\n  document.querySelector('#root')\r\n)\r\n"],"sourceRoot":""}